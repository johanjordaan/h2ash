// Generated by CoffeeScript 1.6.3
(function() {
  var Lead, errors, generate_token, reply_with;

  errors = require('../support/errors');

  reply_with = require('../support/reply_with');

  generate_token = require('../support/generate_token');

  Lead = require('../domain/admin/lead');

  module.exports = function(app, dbs, route_name) {
    app.post(route_name + '/register', function(req, res) {
      var email, motivation;
      email = req.body.email;
      motivation = req.body.motivation;
      return dbs.h2ash_admin.Lead.findOne({
        email: email
      }).exec(function(err, lead) {
        var lead_existed;
        if (err) {
          console.log('------------', err);
        }
        if ((!err) && lead && lead.validated) {
          return reply_with(req, res, errors.LEAD_EXISTS);
        } else {
          lead_existed = lead != null;
          if (!lead_existed) {
            lead = new dbs.h2ash_admin.Lead({
              email: email,
              motivation: motivation,
              validated: false
            });
          }
          return generate_token([email], function(ex, token) {
            lead.validation_token = token;
            return lead.save(function(err, saved) {
              if (lead_existed) {
                return reply_with(req, res, errors.LEAD_NOT_VALIDATED);
              } else {
                return reply_with(req, res, errors.OK);
              }
            });
          });
        }
      });
    });
    app.get(route_name + '/validate/:validation_token', function(req, res) {
      return dbs.h2ash_admin.Lead.findOne({
        validated: false,
        validation_token: req.params.validation_token
      }).exec(function(err, lead) {
        if ((!err) && (lead != null)) {
          console.log('Registration token found');
          lead.validated = true;
          return lead.save(function(err, saved) {
            console.log("Lead validated");
            return reply_with(req, res, errors.OK);
          });
        } else {
          console.log("Token not found. Returning OK to client.");
          return reply_with(req, res, errors.OK);
        }
      });
    });
    return console.log("pre-registration routes loaded to [" + route_name + "]");
  };

}).call(this);
