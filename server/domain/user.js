// Generated by CoffeeScript 1.6.3
(function() {
  var Actor, UserSchema, crypto, mongoose;

  mongoose = require('mongoose');

  crypto = require('crypto');

  Actor = require('./actor');

  UserSchema = mongoose.Schema({
    email: String,
    password: String,
    actors: [
      {
        type: mongoose.Schema.ObjectId,
        ref: 'Actor'
      }
    ],
    token: String,
    registration_token: String,
    validated: Boolean,
    admin: Boolean
  });

  UserSchema.methods.check_password = function(provided_password) {
    return this.password === provided_password;
  };

  UserSchema.methods.generate_token = function(cb) {
    var that;
    that = this;
    return crypto.randomBytes(256, function(ex, buff) {
      var hash;
      hash = crypto.createHash('sha256');
      hash.update(that.password);
      hash.update(buff);
      that.token = hash.digest('hex');
      console.log("New token generated [" + that.token + "]");
      return cb();
    });
  };

  UserSchema.methods.generate_registration_token = function(cb) {
    var that;
    that = this;
    return crypto.randomBytes(256, function(ex, buff) {
      var hash;
      hash = crypto.createHash('sha256');
      hash.update(that.password);
      hash.update(buff);
      that.registration_token = hash.digest('hex');
      console.log("New registration token generated [" + that.registration_token + "]");
      return cb();
    });
  };

  module.exports = UserSchema;

}).call(this);
